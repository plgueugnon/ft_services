# define mysql Service
apiVersion: v1            # version of my k8s api
kind: Service             # type of resource we want
metadata:                 # info used to identify object
  name: influxb           # name of my service - must be unique
  labels:                 # use to register detailed info about resource
    app: influxdb            # tag info to find more easily a resource
spec:
  type: ClusterIP         # state what type of IP = internal cluster IP here
  clusterIP: 10.96.172.235 # due to alpine bug with DNS management, we have to force cluster IP
  ports:
  - port: 8086
    protocol: TCP
    targetPort: 8086
    name: influxdb
  selector:               # Allow to identify resources with the same label
    app: influxdb

---

# define mysql request for volume storage 
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: influxdb
  labels:
    app: influxdb
spec:
  accessModes:
    - ReadWriteOnce     # Read & write rights on only one node
  resources:
    requests:
      storage: 1Gi      # define volume size to be requested

---

# define image deployment instructions
apiVersion: apps/v1
kind: Deployment
metadata:
  name: influxdb
  labels:
    app: influxdb
spec:
  selector:
    matchLabels:
      app: influxdb
  template:
    metadata:
      labels:
        app: influxdb
    spec:
      containers:         # define container
      - name: influxdb
        image: influxdb
        imagePullPolicy: Never # Image will only be pulled localy
        ports:
        - containerPort: 8086
          name: influxdb
        volumeMounts:     # define where PV is mounted in container
        - mountPath: /root/.influxdb
          name: influxdb
      volumes:            # define PV linked with PVC
      - name: influxdb
        persistentVolumeClaim:
          claimName: influxdb